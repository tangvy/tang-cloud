server:
  port: 8001

spring:
  application:
    name: cloud-payment-service
  #datasource:
  #  type: com.alibaba.druid.pool.DruidDataSource  #当前数据源操作类型
  #  driver-class-name: org.gjt.mm.mysql.Driver    #MySQL驱动包
  #  username: root
  #  password: 123456
  #  url: jdbc:mysql://192.168.68.128:3307/seata?useUnicode=true&characterEncoding=utf-8&useSSL=false

  main:
    allow-bean-definition-overriding: true
  shardingsphere:
    #配置数据源
    datasource:
      names: ds0,ds1,ds2
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        #driver-class-name: com.mysql.cj.jdbc.Driver
        driver-class-name: org.gjt.mm.mysql.Driver
        url: jdbc:mysql://192.168.68.128:3307/sharding_jdbc_db1?useUnicode=true&characterEncoding=utf-8&useSSL=false
        username: root
        password: 123456
        maxPoolSize: 100
        minPoolSize: 5

      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: org.gjt.mm.mysql.Driver
        url: jdbc:mysql://192.168.68.128:3307/sharding_jdbc_db2?useUnicode=true&characterEncoding=utf-8&useSSL=false
        username: root
        password: 123456
        maxPoolSize: 100
        minPoolSize: 5

      ds2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: org.gjt.mm.mysql.Driver
        url: jdbc:mysql://192.168.68.128:3307/sharding_jdbc_db3?useUnicode=true&characterEncoding=utf-8&useSSL=false
        username: root
        password: 123456
        maxPoolSize: 100
        minPoolSize: 5


    sharding:
      tables:
        t_order:
          actual-data-nodes: ds0.t_order$->{0..1},ds1.t_order$->{2..4}
          database-strategy:
            inline:
              #数据源分片策略
              sharding-column: user_id
              #数据源分片算法
              algorithm-expression: ds$->{user_id%2}
          table-strategy:
            inline:
              #表分片策略
              sharding-column: order_id
              #表分片算法
              algorithm-expression: t_order$->{order_id%3+1}
      default-data-source-name: ds0
    props:
      sql:
        show: true


mybatis:
  mapperLocations: classpath:mapper/*.xml
  type-aliases-package: com.tangv.cloud.entities

eureka:
  client:
    #表示是否将自己注册进eureka server默认为true
    register-with-eureka: true
    #表示是否从eureka server抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true
    fetch-registry: true
    service-url:
      #defaultZone: http://localhost:7001/eureka  单机版
      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka
  instance:
    instance-id: payment8001
    prefer-ip-address: true #访问路径显示IP地址



